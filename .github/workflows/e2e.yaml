name: E2E

on:
  workflow_call:

jobs:
  db-syncer-image:
    uses: ryanemerson/db-syncer/.github/workflows/build-image.yaml@gh_action_image_build

  e2e:
    needs: db-syncer-image
    runs-on: ubuntu-latest
    steps:

    - name: Checkout Test Code
      uses: actions/checkout@v2
      with:
        repository: ryanemerson/gingersnap-test
        path: test

    - name: Checkout Operator PR Branch
      if: ${{ contains(github.repository, 'operator') }}
      uses: actions/checkout@v2
      with:
        ref: ${{ github.ref }}
        path: operator

    - name: Checkout Operator Main Branch
      if: ${{ !contains(github.repository, 'operator') }}
      uses: actions/checkout@v2
      with:
        repository: gingersnap-project/operator
        path: operator

    - name: Install Kind
      run: go install sigs.k8s.io/kind@v0.14.0

    - name: Create Kind Cluster
      run: |
        cd operator
        make oc operator-sdk
        echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH
        ./hack/kind.sh

    - name: Download Component Images
      uses: actions/download-artifact@v3

    - name: Load Component Images
      run: |
        docker load --input ${{ needs.db-syncer-image.outputs.image-name }}/${{ needs.db-syncer-image.outputs.image-name }}.tar
        kind load docker-image quay.io/gingersnap/db-syncer

    - name: Build and Deploy Operator with OLM
      run: |
        cd operator
        make catalog-source catalog-install
        ./hack/create-subscription.sh
        # First check deployment exists to prevent wait returning not found error
        i=1;until kubectl -n olm get deployment/gingersnap-operator-controller-manager || (( $i == 60 )) ; do ((i=i+1)); sleep 10; done
        kubectl -n operators wait --timeout=60s --for=condition=available deployment/gingersnap-operator-controller-manager

    - name: Build and push Test Image to local cluster
      uses: docker/build-push-action@v3
      with:
        context: ./test
        file: test/src/test/docker/Dockerfile.jvm
        push: true
        tags: localhost:5000/test

    - name: Execute Tests
      run: |
        kubectl kustomize test/deploy/test | kubectl apply -f -
        kubectl wait --for=condition=complete --timeout=60s job/test

    - name: Retrieve Test Results
      if: success() || failure()
      run: |
        mkdir results
        kubectl kustomize test/deploy/reader | kubectl apply -f -
        kubectl wait --for=condition=ready pod/report-reader
        kubectl cp report-reader:/test-output results

    - name: Inspect Cluster
      if: failure()
      run: oc adm inspect ns

    - name: Upload Inspect Artifacts
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: oc-inspect
        path: inspect.*

    - name: Upload Test Logs
      uses: actions/upload-artifact@v3
      if: success() || failure()
      with:
        name: test-results
        path: "results/TEST-*.xml"
